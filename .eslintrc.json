{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "env": {
    "node": true,
    "es2022": true,
    "jest": true
  },
  "rules": {
    // TypeScript specific rules
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": ["error", {
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_"
    }],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    
    // General code quality rules
    "no-console": ["warn", {
      "allow": ["warn", "error", "info"]
    }],
    "no-debugger": "error",
    "no-duplicate-imports": "error",
    "no-unused-expressions": "error",
    "prefer-const": "error",
    "prefer-template": "error",
    "require-await": "error",
    
    // Error prevention
    "no-return-await": "error",
    "no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-useless-catch": "error",
    
    // Code style (not handled by Prettier)
    "array-callback-return": "error",
    "dot-notation": "error",
    "eqeqeq": ["error", "always"],
    "no-lonely-if": "error",
    "no-nested-ternary": "warn",
    "prefer-arrow-callback": "error",
    "prefer-destructuring": ["error", {
      "object": true,
      "array": false
    }]
  },
  "ignorePatterns": [
    "dist/**",
    "node_modules/**",
    "coverage/**",
    "*.js",
    "*.d.ts"
  ]
}